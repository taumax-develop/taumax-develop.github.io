---
import { Image } from "astro:assets";
import SiteLayout from "../../../../../layouts/SiteLayout.astro";
import play_with_nodejs_twitter from './img/play_with_nodejs_twitter.jpg';
import { TWITTER_CARD_SUMMARY } from '../../../../../components/BaseHead.astro';
import { BASE_URL } from "../../../../../consts";

const indexList = [
  { id: "firstly", name: "はじめに" },
  { id: "twitter", name: "Node.js × X(旧twitter)" },
  { id: "others", name: "その他の実装" },
];
---

<SiteLayout
  title="Node.js × X（旧Twitter）"
  description="Node.jsでTwitter API を呼び出す"
  twitterCardSize={TWITTER_CARD_SUMMARY}
  indexList={indexList}>

  <h2 class="title">Node.js × Twitter</h2>

  <ul class="breadcrumb">
    <li class="breadcrumbli"><a href={BASE_URL}>ホーム</a></li>
    <li class="breadcrumbli"> > <a href=`${BASE_URL}/contents/development/javascript/js_index`>js関連技術</a></li>
    <li class="breadcrumbli"> > <a href=`${BASE_URL}/contents/development/javascript/nodejs/nodejs`>Node.js</a></li>
    <li class="breadcrumbli"> > <a href=`${BASE_URL}/contents/development/javascript/nodejs/what_i_made`>Node.js × Twitch, Twitter, OBS</a></li>
    <li class="breadcrumbli"> > Node.js × Twitter</li>
  </ul>

  <br/>
  <span id="firstly"></span>
  <h3 class="title">はじめに</h3>
  <p>
    このページは、 <a href=`${BASE_URL}/contents/development/javascript/nodejs/what_i_made`>Node.js × Twitch, Twitter, OBS</a> の続きです。<br/>
    Node.js から X（旧twitter）にポストする部分について記載します。以下画像の赤枠部分です。<br/>
    <Image src={play_with_nodejs_twitter} width={800} alt="play_with_nodejs_twitter" /><br/>

    <br/>
    その他の部分については、以下リンク先に別ページでまとめています。GitLab や Linux, Docker, nginx については記載していません。
  </p>

  <ul>
    <li><a href=`${BASE_URL}/contents/development/javascript/nodejs/twitch`>Node.js × twitch</a></li>
    <li><a href=`${BASE_URL}/contents/development/javascript/nodejs/obs`>Node.js × OBS</a></li>
  </ul>

  <br/>
  <span id="twitter"></span>
  <h3 class="title">Node.js × X（旧twitter）</h3>
  <p>
    Node.js から X（旧twitter）にポストするためには Xの API を呼び出す必要があります。X（旧twitter）のAPIは、限定された条件内であれば無料で使用することができます。具体的な条件は以下。
  </p>

  <ul>
    <li>月1,500、1日50ポストまで</li>
    <li>ポストとポストの削除</li>
    <li>自分のアカウントのデータの取得（フォロワー数、フォロー数など）</li>
  </ul>

  <p>
    詳しくは<a href="https://programming-zero.net/how-to-start-twitter-api-basic-and-free/" target="_blank" rel="noopener noreferrer">リンク先参照</a>。<br/>

    <br/>
    XのAPIはv1.1, v2の2つがあり、それぞれ以下のように使い分ける必要があります。
  </p>

  <ul>
    <li>v1.1：ツイートに画像や動画などのメディアを添付する場合に使用。</li>
    <li>v2：上記以外は基本的にはv2を使用。</li>
  </ul>

  <p>
    私はX関連の機能を Node.js で実装する場合、 <a href="https://github.com/PLhery/node-twitter-api-v2/tree/065b02ad264d70e8f879184fb7130e033c659cc3" target="_blank" rel="noopener noreferrer">node-twitter-api-v2</a> というライブラリを使用しています。これを使うと簡単にv1.1とv2を簡単に切り替えることができるので便利です。実際にそのライブラリを使用したコードは以下の通り。<br/>
    事前に以下コマンドで node-twitter-api-v2 をインストールしている前提です。<br/>
    <code>npm i twitter-api-v2</code><br/>
  </p>


<pre class="title"><code class="title">tweet.js</code></pre>
<pre><code>{`export async function tweetStreamStart() {
let tweetClient = new twitter.TwitterApi({
appKey: [api_key],
appSecret: [api_secret],
accessToken: [access_token],
accessSecret: [access_secret],
}).readWrite

// 画像のアップロード。
// 複数ファイルをアップロードする場合は Promise.all([]) 内で複数アップロード。
const mediaIds = await Promise.all([
<span style="color:red">tweetClient.v1.uploadMedia([file_path]),</span>  // v1.1で画像アップロード
]);

const status = {
text: [post_text],
media: {media_ids: mediaIds} // Pass the media id string
}

<span style="color:red">tweetClient.v2.tweet(status)</span>  // v2でポスト
}`}
</code></pre>

  <br/>
  <p>
    "[ ]"には以下の値を設定します。
  </p>
  <ol>
    <li>api_key：XのAPI Key</li>
    <li>api_secret：XのAPI Secret</li>
    <li>access_token：XのAccess Token</li>
    <li>access_secret：XのAccess Secret</li>
    <li>file_path：ポストするファイルのパスとファイル名</li>
    <li>post_text：ポストする文言</li>
  </ol>
  <p>
    XのAPI を使うためには 各種APIキーを取得する必要があります（上記1～4）。<br/>
    これらを取得する方法は<a href="https://zenn.dev/eito_blog/articles/a982fdb073493a" target="_blank" rel="noopener noreferrer">こちら参照</a>。<br/>

    <br/>
    これは余談ですが、（おそらくですが）2023年4月頃にXのAPI仕様が変わって以降、APIキーを取得するプロセスが変わって、以前よりは案外楽に取得できるようになったようです。<br/>
    無料枠で済むようなものであれば気軽に申請できるようなので興味ある方はやってみてはいかがでしょうか。<br/>

    <br/>
    話を戻します。<br/>
    <a href=`${BASE_URL}/contents/development/javascript/nodejs/twitch#webhook`>Twitch の Webhook</a> を使うと配信開始のイベントを受け取ることもできるので、組み合わせることで、配信開始と同時にXに自動的にポストするということも実現できます。<br/>
    以下が実際のポストです。<br/>
  </p>

  <blockquote class="twitter-tweet"><p lang="ja" dir="ltr">twitch配信通知bot<br>twitchでロマサガ3配信中です！<br>お時間合う方是非遊びに来てみてくださーい。<br>▶️視聴はこちら：<a href="https://t.co/P46Z6JrYH1">https://t.co/P46Z6JrYH1</a><a href="https://twitter.com/hashtag/%E3%83%AD%E3%83%9E%E3%82%B5%E3%82%AC3?src=hash&amp;ref_src=twsrc%5Etfw">#ロマサガ3</a> <a href="https://twitter.com/hashtag/%E3%83%AC%E3%83%88%E3%83%AD%E3%82%B2%E3%83%BC%E3%83%A0?src=hash&amp;ref_src=twsrc%5Etfw">#レトロゲーム</a> <a href="https://twitter.com/hashtag/%E3%83%AC%E3%83%88%E3%83%AD%E3%82%B3%E3%83%B3%E3%82%B7%E3%83%A5%E3%83%BC%E3%83%9E%E3%83%BC%E6%84%9B%E5%A5%BD%E4%BC%9A?src=hash&amp;ref_src=twsrc%5Etfw">#レトロコンシューマー愛好会</a> <a href="https://t.co/UeLX1jIXB8">pic.twitter.com/UeLX1jIXB8</a></p>&mdash; sagamax@サガとレトロゲー (@sagamax__) <a href="https://twitter.com/sagamax__/status/1708089149629301126?ref_src=twsrc%5Etfw">September 30, 2023</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

  <br/>
  <span id="others"></span>
  <h3 class="title">その他の実装</h3>
  <p>
    Node.js と X の組み合わせについては以上です。その他の組み合わせについては以下リンク先を参照してください。<br/>
  </p>
  <ul>
    <li><a href=`${BASE_URL}/contents/development/javascript/nodejs/twitch`>Node.js × twitch</a></li>
    <li><a href=`${BASE_URL}/contents/development/javascript/nodejs/obs`>Node.js × OBS</a></li>
  </ul>

  <br/>
  <hr>

  <br/>
  参考サイト<br/>
  <ul>
    <li><a href="https://programming-zero.net/how-to-start-twitter-api-basic-and-free/" target="_blank" rel="noopener noreferrer">Programming ZERO Twitter API有料(Basic)、無料プラン利用開始手順※2023年9月最新</a></li>
    <li><a href="https://zenn.dev/eito_blog/articles/a982fdb073493a" target="_blank" rel="noopener noreferrer">Zenn 【2023年度最新版】Twitter API 取得方法</a></li>
    <li><a href="https://github.com/PLhery/node-twitter-api-v2/tree/065b02ad264d70e8f879184fb7130e033c659cc3" target="_blank" rel="noopener noreferrer">github node-twitter-api-v2</a></li>
    <li><a href="https://zenn.dev/temple_c_tech/scraps/72ce713752f7cd" target="_blank" rel="noopener noreferrer">Zenn Twitter-API-v2(Node.js)ライブラリでTwitter検索してみる</a></li>
  </ul>
</SiteLayout>
