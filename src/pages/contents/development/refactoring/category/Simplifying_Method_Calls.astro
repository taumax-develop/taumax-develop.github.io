---
import SiteLayout from '../../../../../layouts/SiteLayout.astro';
import type { index } from '../../../../../components/HeaderIndex.astro';
import { TWITTER_CARD_SUMMARY } from '../../../../../components/BaseHead.astro';

const indexList = [] as index[];
---
<SiteLayout
  title="Simplifying Method Calls"
  description="リファクタリング: Simplifying Method Calls の解説"
  twitterCardSize={TWITTER_CARD_SUMMARY}
  indexList={indexList}
>
  <h2 class="title">リファクタリング技法</h2>

  <p>ここでは<a href="../codesmell/Codesmells">Code Smell</a>を解消するために参考となるリファクタリング技法や、その他参考になりそうな概念を紹介していこうと思います。</p>

  <p>リファクタリングに関してはこの辺りの書籍が参考になると思います。</p>
  <br>
  リファクタリング第2版<br>
  <a target="_blank" href="https://amzn.to/4m4SktG" rel="noopener noreferrer"><img src="../../img/refactoring.jpg" alt="refactoring" /></a>

  <br>
  レガシーコード改善ガイド<br>
  <a target="_blank"  href="https://amzn.to/44SixVn" rel="noopener noreferrer"><img src="../../img/legacy_code.jpg" alt="legacy_code" /></a>

  <h1 id="">関連するリファクタリング技法</h1>

  <h1 id="simplifyingmethodcalls">Simplifying Method Calls</h1>
  <p><a href="https://sourcemaking.com/refactoring/simplifying-method-calls">Simplifying Method Calls</a></p>

  <h2 id="renamemethod">Rename Method</h2>
  <p><a href="sub_simplmethcall/Rename_Method">Rename Method</a></p>

  <h2 id="addparameter">Add Parameter</h2>
  <p><a href="sub_simplmethcall/Add_Parameter">Add Parameter</a></p>

  <h2 id="removeparameter">Remove Parameter</h2>
  <p><a href="sub_simplmethcall/Remove_Parameter">Remove Parameter</a></p>

  <h2 id="separatequeryfrommodifier">Separate Query from Modifier</h2>
  <p><a href="sub_simplmethcall/Separate_Query_from_Modifier">Separate Query from Modifier</a></p>

  <h2 id="parameterizemethod">Parameterize Method</h2>
  <p><a href="sub_simplmethcall/Parameterize_Method">Parameterize Method</a></p>

  <h2 id="replaceparameterwithexplicitmethods">Replace Parameter with Explicit Methods</h2>
  <p><a href="sub_simplmethcall/Replace_Parameter_with_Explicit_Methods">Replace Parameter with Explicit Methods</a></p>

  <h2 id="preservewholeobject">Preserve Whole Object</h2>
  <p><a href="sub_simplmethcall/Preserve_Whole_Object">Preserve Whole Object</a></p>

  <h2 id="replaceparameterwithmethodcall">Replace Parameter with Method Call</h2>
  <p><a href="sub_simplmethcall/Replace_Parameter_with_Method_Call">Replace Parameter with Method Call</a></p>

  <h2 id="introduceparameterobject">Introduce Parameter Object</h2>
  <p><a href="sub_simplmethcall/Introduce_Parameter_Object">Introduce Parameter Object</a></p>

  <h2 id="removesettingmethod">Remove Setting Method</h2>
  <p><a href="sub_simplmethcall/Remove_Setting_Method">Remove Setting Method</a></p>

  <h2 id="hidemethod">Hide Method</h2>
  <p><a href="sub_simplmethcall/Hide_Method">Hide Method</a></p>

  <h2 id="replaceconstructorwithfactorymethod">Replace Constructor with Factory Method</h2>
  <p><a href="sub_simplmethcall/Replace_Constructor_with_Factory_Method">Replace Constructor with Factory Method</a></p>

  <h2 id="replaceerrorcodewithexception">Replace Error Code with Exception</h2>
  <p><a href="sub_simplmethcall/Replace_Error_Code_with_Exception">Replace Error Code with Exception</a></p>

  <h2 id="replaceexceptionwithtest">Replace Exception with Test</h2>
  <p><a href="sub_simplmethcall/Replace_Exception_with_Test">Replace Exception with Test</a></p>
</SiteLayout>
