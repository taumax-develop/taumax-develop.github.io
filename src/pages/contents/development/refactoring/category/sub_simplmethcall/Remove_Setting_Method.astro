---
import SiteLayout from '../../../../../../layouts/SiteLayout.astro';
import { BASE_URL, TWITTER_CARD_SUMMARY } from '../../../../../../consts';

const indexList = [
  { id: '#pagetop', name: 'ページトップ' },
  { id: '#simplifyingmethodcalls', name: 'Simplifying Method Calls' },
  { id: '#removesettingmethod', name: 'Remove Setting Method' }
];
---

<SiteLayout
  title="Remove Setting Method | リファクタリング技法"
  indexList={indexList}
  twitterCardSize={TWITTER_CARD_SUMMARY}>

  <h2 class="title">リファクタリング技法</h2>

    <p>ここでは<a href=`${BASE_URL}/contents/codesmell/Codesmells`>Code Smell</a>を解消するために参考となるリファクタリング技法や、その他参考になりそうな概念を紹介していこうと思います。</p>
    
    <p>リファクタリングに関してはこの辺りの書籍が参考になると思います。</p>
    <br>
    リファクタリング第2版<br>
    <a target="_blank" href="https://amzn.to/4m4SktG" rel="noopener noreferrer"><img src="../../../img/refactoring.jpg" alt="refactoring" /></a>

    <br>
    レガシーコード改善ガイド<br>
    <a target="_blank"  href="https://amzn.to/44SixVn" rel="noopener noreferrer"><img src="../../../img/legacy_code.jpg" alt="legacy_code" /></a>

    <h1 id="">関連するリファクタリング技法</h1>

    <h1 id="simplifyingmethodcalls">Simplifying Method Calls</h1>
    <p><a href="https://sourcemaking.com/refactoring/simplifying-method-calls">Simplifying Method Calls</a></p>

    <h2 id="removesettingmethod">Remove Setting Method</h2>
    <p><a href="https://sourcemaking.com/refactoring/remove-setting-method">Remove Setting Method</a></p>
    <p>データクラス内のデータがインスタンス生成時にのみ設定される場合、setterは必要ないので削除しましょう。</p>
    <p><strong><em>関連するCode Smell</em></strong></p>
    <ul>
      <li><a href="https://qiita.com/taumax/items/f192b16676f78fa04849#data-class">Data Class</a></li>
    </ul>
</SiteLayout>
