---
import SiteLayout from '../../../../../../layouts/SiteLayout.astro';
import { TWITTER_CARD_SUMMARY } from '../../../../../../components/BaseHead.astro';
const indexList = [
  { id: '#pagetop', name: 'ページトップ' },
  { id: '#composingmethods', name: 'Composing Methods' },
  { id: '#replacetempwithquery', name: 'Replace Temp with Query' }
];
---

<SiteLayout
  title="Replace Temp with Query"
  description="リファクタリング技法：Replace Temp with Queryの解説"
  twitterCardSize={TWITTER_CARD_SUMMARY}
  indexList={indexList}
>
  <h2 class="title">リファクタリング技法</h2>
  <p>ここでは<a href="../codesmell/Codesmells.html">Code Smell</a>を解消するために参考となるリファクタリング技法や、その他参考になりそうな概念を紹介していこうと思います。</p>
  <p>リファクタリングに関してはこの辺りの書籍が参考になると思います。</p>
  <br />
  リファクタリング第2版<br />
  <a target="_blank" href="https://amzn.to/4m4SktG" rel="noopener noreferrer"><img src="../../../img/refactoring.jpg" alt="refactoring" /></a>
  <br />
  レガシーコード改善ガイド<br />
  <a target="_blank" href="https://amzn.to/44SixVn" rel="noopener noreferrer"><img src="../../../img/legacy_code.jpg" alt="legacy_code" /></a>

  <h1>関連するリファクタリング技法</h1>
  <h2 id="composingmethods">Composing Methods</h2>
  <p><a href="https://sourcemaking.com/refactoring/composing-methods">Composing Methods</a></p>

  <h2 id="replacetempwithquery">Replace Temp with Query</h2>
  <p><a href="https://sourcemaking.com/refactoring/replace-temp-with-query">Replace Temp with Query</a>
  変数の初期化を別のメソッドとして切り出すこと。
  わかりやすいメソッド名をつけることで、変数の意図を明確にできます。また、コードの重複を排除できる。</p>
  <p><strong><em>関連するCode Smell</em></strong></p>
  <ul>
    <li><a href="https://qiita.com/taumax/items/f192b16676f78fa04849#long-method">Long Method</a></li>
  </ul>
</SiteLayout>
