---
import SiteLayout from '../../../../../../layouts/SiteLayout.astro';
import { TWITTER_CARD_SUMMARY } from '../../../../../../components/BaseHead.astro';
const indexList = [
  { id: '#pagetop', name: 'ページトップ' },
  { id: '#dealingwithgeneralisation', name: 'Dealing with Generalisation' },
  { id: '#collapsehierarchy', name: 'Collapse Hierarchy' }
];
---

<SiteLayout
  title="Collapse Hierarchy"
  description="リファクタリング技法：Collapse Hierarchyの解説"
  twitterCardSize={TWITTER_CARD_SUMMARY}
  indexList={indexList}
>
  <h2 class="title">リファクタリング技法</h2>
  <p>ここでは<a href="../codesmell/Codesmells">Code Smell</a>を解消するために参考となるリファクタリング技法や、その他参考になりそうな概念を紹介していこうと思います。</p>
  <p>リファクタリングに関してはこの辺りの書籍が参考になると思います。</p>
  <br />
  リファクタリング第2版<br />
  <a target="_blank" href="https://amzn.to/4m4SktG" rel="noopener noreferrer"><img src="../../../img/refactoring.jpg" alt="refactoring" /></a>
  <br />
  レガシーコード改善ガイド<br />
  <a target="_blank" href="https://amzn.to/44SixVn" rel="noopener noreferrer"><img src="../../../img/legacy_code.jpg" alt="legacy_code" /></a>

  <h1 id="dealingwithgeneralisation">Dealing with Generalisation</h1>
  <p><a href="https://sourcemaking.com/refactoring/dealing-with-generalisation">Dealing with Generalisation</a></p>

  <h2 id="collapsehierarchy">Collapse Hierarchy</h2>
  <p><a href="https://sourcemaking.com/refactoring/collapse-hierarchy">Collapse Hierarchy</a>
  サブクラスとスーパークラスにほとんど差がないようであればスーパークラスに統合しましょう。</p>
  <p><strong><em>関連するCode Smell</em></strong></p>
  <ul>
    <li><a href="https://qiita.com/taumax/items/f192b16676f78fa04849#lazy-class">Lazy Class</a></li>
    <li><a href="https://qiita.com/taumax/items/f192b16676f78fa04849#dead-code">Dead Code</a></li>
    <li><a href="https://qiita.com/taumax/items/f192b16676f78fa04849#speculative-generality">Speculative Generality</a></li>
  </ul>
</SiteLayout>
