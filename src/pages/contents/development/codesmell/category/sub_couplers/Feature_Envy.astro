---
import SiteLayout from '../../../../../../layouts/SiteLayout.astro';
import { Image } from 'astro:assets';
import RefactoringImg from "../../../img/refactoring.jpg";
import LegacyCodeImg from "../../../img/legacy_code.jpg";

const title = "Feature Envy";
const description = "Code Smell: Feature Envy";
const twitterCardSize = "summary_large_image";
const indexList = [
  { text: "Home", href: "/" }
];
---

<SiteLayout title={title} description={description} twitterCardSize={twitterCardSize} indexList={indexList}>
  <h3 id="featureenvy">Feature Envy</h3>
  <p><a href="https://sourcemaking.com/refactoring/smells/feature-envy">Feature Envy（フィーチャーエンビー）</a></p>
  <p>Feature Envyは、あるメソッドが自分のクラスよりも他のクラスのデータやメソッドを多用する場合に発生します。</p>
  <p><strong><em>兆候と症状</em></strong>
    メソッドが他のクラスのフィールドやメソッドを頻繁に参照している。</p>
  <p><strong><em>問題の理由</em></strong>
    責任の分担が適切でない場合や、機能が正しいクラスに配置されていない場合に発生します。</p>
  <p><strong><em>対処</em></strong></p>
  <ul>
    <li><p>「<a href="https://qiita.com/taumax/items/f192b16676f78fa04849#move-method">Move Method</a>」を使って、メソッドを適切なクラスに移動します。</p></li>
  </ul>
  <p><strong><em>効果</em></strong></p>
  <ul>
    <li>責任の明確化</li>
    <li>保守性の向上</li>
  </ul>
  <br/><br/>
  書籍としてはこの辺りが参考になると思います。<br/>
  <br/>
  リファクタリング第2版<br/>
  <a target="_blank" href="https://amzn.to/4m4SktG" rel="noopener noreferrer"><Image src={RefactoringImg} alt="refactoring" /></a>
  <br/>
  レガシーコード改善ガイド<br/>
  <a target="_blank" href="https://amzn.to/44SixVn" rel="noopener noreferrer"><Image src={LegacyCodeImg} alt="legacy_code" /></a>
</SiteLayout>
