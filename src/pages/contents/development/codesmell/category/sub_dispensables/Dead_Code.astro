---
import SiteLayout from '../../../../../../layouts/SiteLayout.astro';
import { Image } from 'astro:assets';
import refactoring from '../../../img/refactoring.jpg';
import legacy_code from '../../../img/legacy_code.jpg';
const title = 'Dead Code';
const description = 'Code Smell: Dead Code（到達不能コード）';
const twitterCardSize = 'summary_large_image';
const indexList = [
  { text: 'Home', href: '/' }
];
---
<SiteLayout {title} {description} {twitterCardSize} {indexList}>
  <h1 id="deadcode">Dead Code</h1>
  <p><a href="https://sourcemaking.com/refactoring/smells/dead-code">Dead Code（到達不能コード）</a></p>
  <p><strong><em>兆候と症状</em></strong><br />
    使用されない変数、パラメーター、フィールド、メソッド、またはクラス。</p>
  <p><strong><em>問題の理由</em></strong><br />
    ソフトウェアの要件が変更されたり、修正が加えられたりすると、古いコードをクリーンアップする時間がありませんでした。このようなコードは、分岐の1つが（エラーまたは他の状況により）到達不能になったときに、複雑な条件で見つかる可能性もあります。</p>
  <p><strong><em>対処</em></strong><br />
    Dead Codeを見つける最も簡単な方法は、優れたIDEを使用することです。未使用のコードや不要なファイルを削除します。クラスが不要な場合で、サブクラスまたはスーパークラスは使用される場合、「<a href="https://qiita.com/taumax/items/f192b16676f78fa04849#inline-class">Inline Class</a>」または「<a href="https://qiita.com/taumax/items/f192b16676f78fa04849#collapse-hierarchy">Collapse Hierarchy</a>」を適用できます。不必要なパラメーターを削除するには、「<a href="https://qiita.com/taumax/items/f192b16676f78fa04849#remove-parameter">Remove Parameter</a>」を使用します。</p>
  <p><strong><em>効果</em></strong></p>
  <ul>
    <li>コードサイズの削減</li>
  </ul>
  <br /><br />
  <p>書籍としてはこの辺りが参考になると思います。<br /><br />
  リファクタリング第2版<br />
  <a target="_blank" href="https://amzn.to/4m4SktG" rel="noopener noreferrer"><Image src={refactoring} alt="refactoring" /></a><br /><br />
  レガシーコード改善ガイド<br />
  <a target="_blank" href="https://amzn.to/44SixVn" rel="noopener noreferrer"><Image src={legacy_code} alt="legacy_code" /></a>
  </p>
</SiteLayout>
