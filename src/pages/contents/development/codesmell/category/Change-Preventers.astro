---
import SiteLayout from '../../../../../layouts/SiteLayout.astro';
import refactoringImg from '../../img/refactoring.jpg';
import legacyCodeImg from '../../img/legacy_code.jpg';
import { BASE_URL } from '../../../../../consts';

const title = "Change-Preventers";
const description = "Code Smell: Change Preventers";
const twitterCardSize = "summary_large_image";
const indexList = [
  { text: "Home", url: "/" }
];
---
<SiteLayout title={title} description={description} twitterCardSize={twitterCardSize} indexList={indexList}>
  <h2 class="title">Change-Preventers</h2>

  <h2 id="changepreventers">Change Preventers</h2>
  <p><a href="https://sourcemaking.com/refactoring/smells/change-preventers" target="_blank" rel="noopener noreferrer">Change Preventers（変更を妨げるもの）</a>：
    これらのCode Smellは、コードのある場所で何かを変更すると、他の場所でも多くの変更を行う必要があることを意味します。
    プログラム開発ははるかに複雑になり、コストがかかるものになってしまいます。</p>
  <h1 id="divergentchange">Divergent Change</h1>
  <p><a href=`${BASE_URL}/contents/development/codesmell/category/sub_changeprevent/Divergent_Change`>Divergent Change（変更の発散）</a></p>
  <h1 id="shotgunsurgery">Shotgun Surgery</h1>
  <p><a href=`${BASE_URL}/contents/development/codesmell/category/sub_changeprevent/Shotgun_Surgery`>Shotgun Surgery（変更の分散）</a></p>
  <h1 id="parallelinheritancehierarchies">Parallel Inheritance Hierarchies</h1>
  <p><a href=`${BASE_URL}/contents/development/codesmell/category/sub_changeprevent/Parallel_Inheritance_Hierarchies`>Parallel Inheritance Hierarchies（パラレル継承）</a></p>
  <br/><br/><br/>
  書籍としてはこの辺りが参考になると思います。<br/>
  <br/>
  リファクタリング第2版<br/>
  <a target="_blank" href="https://amzn.to/4m4SktG" rel="noopener noreferrer"><img src={refactoringImg.src} alt="refactoring" /></a>
  <br/>
  レガシーコード改善ガイド<br/>
  <a target="_blank" href="https://amzn.to/44SixVn" rel="noopener noreferrer"><img src={legacyCodeImg.src} alt="legacy_code" /></a>
</SiteLayout>
